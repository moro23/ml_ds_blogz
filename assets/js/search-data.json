{
  
    
        "post0": {
            "title": "Building A Machine Learning Validation Framework",
            "content": "Before training a machine learning (ML) model, the dataset is divided into training, validation, and testing sets. This process of dividing the dataset is also known as building a validation framework. . In an ideal situation, the dataset is normally divided into these sets and hence one can continue with the other data preprocessing steps and then proceed to training the mode. . In a situation where the dataset has not been divided into these sets, the best method to use a means of building a validation framework is Cross Validation. Cross Validation is the process of splitting the dataset into Training and Testing set in an unbiased format. . The Steps For Using Cross Validation In Building A Validation Framework is as follows: . Step 1: Randomly divide the data into different groups (n). . Step 2: Use (n-1) group for training the model and the last group for testing. . Step 3: The process is repeated for n number of iterations which is called n-Fold Cross validation. . Notes . The number of iterations are called Folds. . The method of Cross Validation that is used in a situation where we have lots of data is the 10-Fold cross validation which is the preferred algorithm method. . Another method for Cross Validation is the Leave-One-Out Cross Validation. Which is used in a situation where we are dealing with less amount of data. . Lastly, one of the important reasons for building a validation framework is to avoid Data Leakage. Which occurs when the same data used for training a model is also used for testing the model. . Moro A. Wahab .",
            "url": "https://moro23.github.io/ml_ds_blogz/2022/09/08/Building-A-Machine-Learning-Validation-Framework.html",
            "relUrl": "/2022/09/08/Building-A-Machine-Learning-Validation-Framework.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://moro23.github.io/ml_ds_blogz/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://moro23.github.io/ml_ds_blogz/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://moro23.github.io/ml_ds_blogz/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}